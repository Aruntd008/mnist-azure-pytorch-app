name: CI/CD Pipeline for PyTorch MNIST

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-train:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      aci_endpoint: ${{ steps.set-outputs.outputs.aci_endpoint }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install Azure ML SDK v2
      run: |
        python -m pip install --upgrade pip
        pip install azure-ai-ml azure-identity

    - name: Install Python Dependencies
      run: |
        pip install -r model/requirements.txt

    - name: 'Az CLI login with OIDC'
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Train Model on Azure ML
      run: |
        # Train the model using Azure ML compute
        cd model
        python aml_train.py \
          --subscription-id ${{ secrets.AZURE_SUBSCRIPTION_ID }} \
          --resource-group mnist-ml-rg \
          --workspace-name mnist-pytorch-workspace \
          --compute-name mnist-github-cluster \
          --experiment-name mnist-pytorch-experiment \
          --epochs 1 \
          --batch-size 64
        cd ..

    - name: Deploy Model to ACI
      run: |
        # Deploy the model to Azure Container Instances
        cd model
        python aml_deploy.py \
          --subscription-id ${{ secrets.AZURE_SUBSCRIPTION_ID }} \
          --resource-group mnist-ml-rg \
          --workspace-name mnist-pytorch-workspace \
          --model-name mnist-pytorch \
          --service-name mnist-inference-service
        cd ..

        # Get the ACI endpoint URL and set it as an environment variable
        echo "ACI_ENDPOINT=$(python -c 'import json; print(json.load(open("model/endpoint_info.json"))["scoring_uri"])')" >> $GITHUB_ENV

    - name: Set outputs
      id: set-outputs
      run: |
        echo "aci_endpoint=$(python -c 'import json; print(json.load(open("model/endpoint_info.json"))["scoring_uri"])')" >> $GITHUB_OUTPUT
